# Run clustering
data.matrix <- as.matrix(log2(plasma.data))
data.dendro <- as.dendrogram(hclust(d = dist(x = plasma.data)))
# Create dendro
dendro.plot <- ggdendrogram(data = data.dendro, rotate = TRUE)
meta.mouse.p$SUBJECT.OR.ANIMAL.ID<-gsub("-", ".", meta.mouse.p$SUBJECT.OR.ANIMAL.ID)
# Preview the plot
print(dendro.plot)
#Heatmap
# Heatmap
# Data wrangling
data.long <- melt(data.matrix)
meta.mouse.c$Var2<-meta.mouse.c$SUBJECT.OR.ANIMAL.ID
meta.mouse.c$SUBJECT.OR.ANIMAL.ID<-NULL
meta.mouse.p$Var2<-meta.mouse.p$SUBJECT.OR.ANIMAL.ID
meta.mouse.p$SUBJECT.OR.ANIMAL.ID<-NULL
meta.metabolite.p$Var1<-meta.metabolite.p$BIOCHEMICAL
meta.metabolite.p$BIOCHEMICAL<-NULL
test.p<-merge(data.long, meta.mouse.p, by="Var2")
test.p.1<-merge(test.p, meta.metabolite.p)
test.p.2<-test.p.1[test.p.1$SUB.PATHWAY=="Neurotransmitter", ]
View(test.p.2)
View(meta.mouse.p)
View(meta.mouse.p)
View(meta.metabolite.p)
meta.metabolite.p$BIOCHEMICAL<-make.names(meta.metabolite.p$BIOCHEMICAL)
meta.metabolite.p$Var1<-meta.metabolite.p$BIOCHEMICAL
meta.metabolite.p$BIOCHEMICAL<-NULL
test.p<-merge(data.long, meta.mouse.p, by="Var2")
test.p.1<-merge(test.p, meta.metabolite.p)
test.p.2<-test.p.1[test.p.1$SUB.PATHWAY=="Neurotransmitter", ]
test.p<-merge(data.long, meta.mouse.p, by="Var2")
test.p.1<-merge(test.p, meta.metabolite.p)
View(meta.metabolite.p)
View(meta.metabolite.p)
#read in files
plasma.data<-read.csv(file="/Users/Jhansi1/Downloads/UNVA-0201-17MD CDT (PLASMA) VolNormImpData.txt", sep ="\t", header=T)
meta.metabolite.p<-read.csv(file="/Users/Jhansi1/Downloads/metabolite_metadata_plasma.txt", sep ="\t", header=T)
meta.mouse.p<-read.csv(file="/Users/Jhansi1/Downloads/metadata_mice_plasma.txt", sep ="\t", header=T)
#Curate files
plasma.data$BIOCHEMICAL<-make.names(plasma.data$BIOCHEMICAL)
rownames(plasma.data)<-plasma.data$BIOCHEMICAL
plasma.data$BIOCHEMICAL<-NULL
meta.mouse.p$SAMPLE.MATRIX<-NULL
meta.mouse.p$TIME.POINT<-NULL
meta.mouse.p$SAMPLENUMBER<-NULL
meta.mouse.p$SUBJECT.OR.ANIMAL.ID<-gsub("-", ".", meta.mouse.p$SUBJECT.OR.ANIMAL.ID)
meta.metabolite.p$BIOCHEMICAL<-make.names(meta.metabolite.p$BIOCHEMICAL)
# Run clustering
data.matrix <- as.matrix(log2(plasma.data))
#Heatmap
# Heatmap
# Data wrangling
data.long <- melt(data.matrix)
View(meta.metabolite.p)
meta.mouse.p$Var2<-meta.mouse.p$SUBJECT.OR.ANIMAL.ID
meta.mouse.p$SUBJECT.OR.ANIMAL.ID<-NULL
meta.metabolite.c<-read.csv(file="/Users/Jhansi1/Downloads/metabolite_metadata_cecal.txt", sep ="\t", header=T)
View(meta.metabolite.c)
meta.metabolite.p$Var1<-meta.metabolite.p$BIOCHEMICAL
meta.metabolite.p$BIOCHEMICAL<-NULL
test.p<-merge(data.long, meta.mouse.p, by="Var2")
test.p.1<-merge(test.p, meta.metabolite.p)
test.p.2<-test.p.1[test.p.1$SUB.PATHWAY=="Neurotransmitter", ]
test.p.1[test.p.1$SUB.PATHWAY=="Neurotransmitter", ]
test.p.1<-merge(test.p, meta.metabolite.p)
View(test.p.1)
#Curate files
cecal.data$BIOCHEMICAL<-make.names(cecal.data$BIOCHEMICAL)
rownames(cecal.data)<-cecal.data$BIOCHEMICAL
cecal.data$BIOCHEMICAL<-NULL
meta.mouse.c$SAMPLE.MATRIX<-NULL
View(meta.metabolite.c)
test.p.2<-test.p.1[test.p.1$SUB.PATHWAY=="Histidine Metabolism", ]
heatmap.plot <- ggplot(data = test.p.2, aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = value)) +
scale_fill_gradient2() +
theme(axis.text.y = element_text(size = 6))
heatmap.plot
### Neutrophils from JL28 Results
neutrophils<-read.csv(file="/Users/Jhansi1/Downloads/JL28_Total_Neutrophils.txt", sep="\t", header=T)
View(neutrophils)
View(meta.mouse.p)
neutrophils<-neutrophils[-c(2,10,32,37),]
View(neutrophils)
set.seed(997)
p.data.t<-t(data.matrix)
# Create a Random Forest model with default parameters
model1 <- randomForest(as.factor(neutrophils$Strata) ~ ., data = p.data.t, importance = TRUE)
View(data.matrix)
#read in files
plasma.data<-read.csv(file="/Users/Jhansi1/Downloads/UNVA-0201-17MD CDT (PLASMA) VolNormImpData.txt", sep ="\t", header=T)
meta.metabolite.p<-read.csv(file="/Users/Jhansi1/Downloads/metabolite_metadata_plasma.txt", sep ="\t", header=T)
meta.mouse.p<-read.csv(file="/Users/Jhansi1/Downloads/metadata_mice_plasma.txt", sep ="\t", header=T)
#Curate files
plasma.data$BIOCHEMICAL<-make.names(plasma.data$BIOCHEMICAL)
rownames(plasma.data)<-plasma.data$BIOCHEMICAL
plasma.data$BIOCHEMICAL<-NULL
meta.mouse.p$SAMPLE.MATRIX<-NULL
meta.mouse.p$TIME.POINT<-NULL
meta.mouse.p$SAMPLENUMBER<-NULL
meta.mouse.p$SUBJECT.OR.ANIMAL.ID<-gsub("-", ".", meta.mouse.p$SUBJECT.OR.ANIMAL.ID)
meta.metabolite.p$BIOCHEMICAL<-make.names(meta.metabolite.p$BIOCHEMICAL)
# Run clustering
data.matrix <- as.matrix(log2(plasma.data))
#Heatmap
# Heatmap
# Data wrangling
data.long <- melt(data.matrix)
View(data.long)
meta.mouse.p$Var2<-meta.mouse.p$SUBJECT.OR.ANIMAL.ID
meta.mouse.p$SUBJECT.OR.ANIMAL.ID<-NULL
meta.metabolite.p$Var1<-meta.metabolite.p$BIOCHEMICAL
meta.metabolite.p$BIOCHEMICAL<-NULL
test.p<-merge(data.long, meta.mouse.p, by="Var2")
test.p.1<-merge(test.p, meta.metabolite.p)
test.p.2<-test.p.1[test.p.1$SUB.PATHWAY=="Histidine Metabolism", ]
meta.metabolite.p$BIOCHEMICAL<-make.names(meta.metabolite.p$BIOCHEMICAL)
heatmap.plot <- ggplot(data = test.p.2, aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = value)) +
scale_fill_gradient2() +
theme(axis.text.y = element_text(size = 6))
heatmap.plot
### Neutrophils from JL28 Results
neutrophils<-read.csv(file="/Users/Jhansi1/Downloads/JL28_Total_Neutrophils.txt", sep="\t", header=T)
#Stratify mice into high and low based on if they are above or below the median value of neutrophils
median<-median(neutrophils$Total_Neutrophils)
neutrophils$Strata<-NULL
for (i in 1:length(neutrophils$Total_Neutrophils)) {
if (neutrophils$Total_Neutrophils[i] > 54) {
neutrophils$Strata[i]<-"High"
} else  {
neutrophils$Strata[i]<-"Low"}
}
neutrophils<-neutrophils[-c(2,10,32,37),]
library(randomForest)
set.seed(997)
p.data.t<-t(data.matrix)
View(p.data.t)
p.data.t<-t(plasma.data)
# Create a Random Forest model with default parameters
model1 <- randomForest(as.factor(neutrophils$Strata) ~ ., data = p.data.t, importance = TRUE)
model1
importance(model1)
varImpPlot(model1)
View(meta.mouse.p)
# Create a Random Forest model with default parameters
model1 <- randomForest(as.factor(neutrophils$Strata) ~ ., data = p.data.t, importance = TRUE)
model1
importance(model1)
varImpPlot(model1)
predValid <- predict(model1, ValidSet, type = "class")
# Create a Random Forest model with default parameters
model1 <- randomForest(as.factor(neutrophils$Strata) ~ ., data = p.data.t, importance = TRUE)
model1
test.p.2<-test.p.1[test.p.1$SUB.PATHWAY=="Histidine Metabolism", ]
heatmap.plot <- ggplot(data = test.p.2, aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = value)) +
scale_fill_gradient2() +
theme(axis.text.y = element_text(size = 6))
heatmap.plot
View(test.p.1)
test.p.2<-test.p.1[test.p.1$SUPER.PATHWAY=="Cofactors and Vitamins", ]
heatmap.plot <- ggplot(data = test.p.2, aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = value)) +
scale_fill_gradient2() +
theme(axis.text.y = element_text(size = 6))
heatmap.plot
test.p.2<-test.p.1[test.p.1$SUPER.PATHWAY=="Amino Acids", ]
heatmap.plot <- ggplot(data = test.p.2, aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = value)) +
scale_fill_gradient2() +
theme(axis.text.y = element_text(size = 6))
heatmap.plot
test.p.2<-test.p.1[test.p.1$SUPER.PATHWAY=="Amino Acid", ]
heatmap.plot <- ggplot(data = test.p.2, aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = value)) +
scale_fill_gradient2() +
theme(axis.text.y = element_text(size = 6))
heatmap.plot
test.p.2<-test.p.1[test.p.1$SUB.PATHWAY=="Primary Bile Acid Metabolism", ]
heatmap.plot <- ggplot(data = test.p.2, aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = value)) +
scale_fill_gradient2() +
theme(axis.text.y = element_text(size = 6))
heatmap.plot
View(neutrophils)
View(meta.metabolite.p)
View(meta.mouse.p)
test.p.2<-test.p.1[test.p.1$SUB.PATHWAY=="Secondary Bile Acid Metabolism", ]
heatmap.plot <- ggplot(data = test.p.2, aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = value)) +
scale_fill_gradient2() +
theme(axis.text.y = element_text(size = 6))
heatmap.plot
model1
importance(model1)
varImpPlot(model1)
# Create a Random Forest model with default parameters
model1 <- randomForest(as.factor(neutrophils$Strata) ~ ., data = p.data.t, importance = TRUE)
model1
importance(model1)
varImpPlot(model1)
#Metabolomics analysis
# Load dependencies
library(ggplot2)
library(dplyr)
library(ggplot2)
library(ggdendro)
library(reshape2)
library(grid)
library(randomForest)
#read in files
cecal.data<-read.csv(file="/Users/Jhansi1/Downloads/UNVA-0201-17MD CDT (CECAL) ScaledimpData.txt", sep ="\t", header=T)
meta.metabolite.c<-read.csv(file="/Users/Jhansi1/Downloads/metabolite_metadata_cecal.txt", sep ="\t", header=T)
meta.mouse.c<-read.csv(file="/Users/Jhansi1/Downloads/metadata_mice_cecal.txt", sep ="\t", header=T)
#Curate files
cecal.data$BIOCHEMICAL<-make.names(cecal.data$BIOCHEMICAL)
rownames(cecal.data)<-cecal.data$BIOCHEMICAL
cecal.data$BIOCHEMICAL<-NULL
meta.mouse.c$SAMPLE.MATRIX<-NULL
meta.mouse.c$TIME.POINT<-NULL
meta.mouse.c$SAMPLENUMBER<-NULL
meta.mouse.c$SUBJECT.OR.ANIMAL.ID<-gsub("-", ".", meta.mouse.c$SUBJECT.OR.ANIMAL.ID)
meta.metabolite.c$BIOCHEMICAL<-make.names(meta.metabolite.c$BIOCHEMICAL)
#Scale all the data
#maxs <- apply(cecal.data, 2, max)
#mins <- apply(cecal.data, 2, min)
#data.scaled<-scale(cecal.data, center = mins, scale = maxs - mins)
# Run clustering
data.matrix <- as.matrix(log2(cecal.data))
data.dendro <- as.dendrogram(hclust(d = dist(x = cecal.data)))
# Create dendro
dendro.plot <- ggdendrogram(data = data.dendro, rotate = TRUE)
# Preview the plot
print(dendro.plot)
#Heatmap
# Heatmap
# Data wrangling
data.long <- melt(data.matrix)
meta.mouse.c$Var2<-meta.mouse.c$SUBJECT.OR.ANIMAL.ID
meta.mouse.c$SUBJECT.OR.ANIMAL.ID<-NULL
meta.metabolite.c$Var1<-meta.metabolite.c$BIOCHEMICAL
meta.metabolite.c$BIOCHEMICAL<-NULL
test<-merge(data.long, meta.mouse.c, by="Var2")
test.1<-merge(test, meta.metabolite.c)
#test.1<-test.1[test.1$TREATMENT!='Western_diet_ControlBedding', ]
test.2<-test.1[test.1$SUB.PATHWAY=="Neurotransmitter", ]
test.2<-test.1[test.1$Var1=="ursodeoxycholate", ]
test.2$value<-2^test.2$value
heatmap.plot <- ggplot(data = test.2, aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = value)) +
scale_fill_gradient2() +
theme(axis.text.y = element_text(size = 6))
heatmap.plot
# Preview the heatmap
print(heatmap.plot)
### Neutrophils from JL28 Results
neutrophils<-read.csv(file="/Users/Jhansi1/Downloads/JL28_Total_Neutrophils.txt", sep="\t", header=T)
#Stratify mice into high and low based on if they are above or below the median value of neutrophils
median<-median(neutrophils$Total_Neutrophils)
neutrophils$Strata<-NULL
for (i in 1:length(neutrophils$Total_Neutrophils)) {
if (neutrophils$Total_Neutrophils[i] > 54) {
neutrophils$Strata[i]<-"High"
} else  {
neutrophils$Strata[i]<-"Low"}
}
neutrophils<-neutrophils[1:28,]
library(randomForest)
set.seed(100)
cecal.data.1<-subset(cecal.data, select=-c(JL28.28))
c.data.t<-t(cecal.data.1)
train <- sample(nrow(c.data.t), 0.7*nrow(c.data.t), replace = FALSE)
# Create a Random Forest model with default parameters
model1 <- randomForest(as.factor(neutrophils$Strata) ~ ., data = c.data.t, importance = TRUE)
model1
importance(model1)
varImpPlot(model1)
# Create a Random Forest model with default parameters
model1 <- randomForest(as.factor(neutrophils$Strata) ~ ., data = c.data.t, importance = TRUE)
model1
importance(model1)
varImpPlot(model1)
predValid <- predict(model1, ValidSet, type = "class")
View(test.2)
View(test.1)
x<-test.p.1[test.p.1$Var1=="imidazole.propionate", ]
x<-test.2[test.2$Var1=="imidazole.propionate", ]
View(x)
View(test.2)
x<-test.1[test.1$Var1=="imidazole.propionate", ]
View(x)
ggplot(data = x, aes(x = Treatment, y = value)) +
geom_boxplot()
ggplot(data = x, aes(x = TREATMENT, y = value)) +
geom_boxplot()
ctl<-x[x$TREATMENT=="Control_diet",3]
wd<-x[x$TREATMENT=="Western_diet",3]
t.test(clt,wd)
t.test(ctl,wd)
wdcb<-x[x$TREATMENT=="Western_diet_ControlBedding",3]
t.test(wd,wdcb)
#read in files
plasma.data<-read.csv(file="/Users/Jhansi1/Downloads/UNVA-0201-17MD CDT (PLASMA) VolNormImpData.txt", sep ="\t", header=T)
meta.metabolite.p<-read.csv(file="/Users/Jhansi1/Downloads/metabolite_metadata_plasma.txt", sep ="\t", header=T)
meta.mouse.p<-read.csv(file="/Users/Jhansi1/Downloads/metadata_mice_plasma.txt", sep ="\t", header=T)
#Curate files
plasma.data$BIOCHEMICAL<-make.names(plasma.data$BIOCHEMICAL)
rownames(plasma.data)<-plasma.data$BIOCHEMICAL
plasma.data$BIOCHEMICAL<-NULL
meta.mouse.p$SAMPLE.MATRIX<-NULL
meta.mouse.p$TIME.POINT<-NULL
meta.mouse.p$SAMPLENUMBER<-NULL
meta.mouse.p$SUBJECT.OR.ANIMAL.ID<-gsub("-", ".", meta.mouse.p$SUBJECT.OR.ANIMAL.ID)
meta.metabolite.p$BIOCHEMICAL<-make.names(meta.metabolite.p$BIOCHEMICAL)
# Run clustering
data.matrix <- as.matrix(log2(plasma.data))
data.dendro <- as.dendrogram(hclust(d = dist(x = plasma.data)))
# Create dendro
dendro.plot <- ggdendrogram(data = data.dendro, rotate = TRUE)
#Heatmap
# Heatmap
# Data wrangling
data.long <- melt(data.matrix)
meta.mouse.p$Var2<-meta.mouse.p$SUBJECT.OR.ANIMAL.ID
meta.mouse.p$SUBJECT.OR.ANIMAL.ID<-NULL
meta.metabolite.p$Var1<-meta.metabolite.p$BIOCHEMICAL
#Heatmap
# Heatmap
# Data wrangling
data.long <- melt(plasma.data)
meta.mouse.p$Var2<-meta.mouse.p$SUBJECT.OR.ANIMAL.ID
meta.mouse.p$SUBJECT.OR.ANIMAL.ID<-NULL
meta.metabolite.p$Var1<-meta.metabolite.p$BIOCHEMICAL
meta.metabolite.p$BIOCHEMICAL<-NULL
test.p<-merge(data.long, meta.mouse.p, by="Var2")
View(data.long)
#read in files
plasma.data<-read.csv(file="/Users/Jhansi1/Downloads/UNVA-0201-17MD CDT (PLASMA) VolNormImpData.txt", sep ="\t", header=T)
meta.metabolite.p<-read.csv(file="/Users/Jhansi1/Downloads/metabolite_metadata_plasma.txt", sep ="\t", header=T)
meta.mouse.p<-read.csv(file="/Users/Jhansi1/Downloads/metadata_mice_plasma.txt", sep ="\t", header=T)
#Curate files
plasma.data$BIOCHEMICAL<-make.names(plasma.data$BIOCHEMICAL)
rownames(plasma.data)<-plasma.data$BIOCHEMICAL
plasma.data$BIOCHEMICAL<-NULL
meta.mouse.p$SAMPLE.MATRIX<-NULL
meta.mouse.p$TIME.POINT<-NULL
meta.mouse.p$SAMPLENUMBER<-NULL
meta.mouse.p$SUBJECT.OR.ANIMAL.ID<-gsub("-", ".", meta.mouse.p$SUBJECT.OR.ANIMAL.ID)
meta.metabolite.p$BIOCHEMICAL<-make.names(meta.metabolite.p$BIOCHEMICAL)
# Run clustering
data.matrix <- as.matrix(log2(plasma.data))
#Heatmap
# Heatmap
# Data wrangling
data.long.p <- melt(plasma.data)
View(plasma.data)
meta.mouse.p$Var2<-meta.mouse.p$SUBJECT.OR.ANIMAL.ID
meta.mouse.p$SUBJECT.OR.ANIMAL.ID<-NULL
meta.metabolite.p$Var1<-meta.metabolite.p$BIOCHEMICAL
meta.metabolite.p$BIOCHEMICAL<-NULL
test.p<-merge(data.long.p, meta.mouse.p, by="Var2")
View(meta.mouse.p)
#read in files
cecal.data<-read.csv(file="/Users/Jhansi1/Downloads/UNVA-0201-17MD CDT (CECAL) ScaledimpData.txt", sep ="\t", header=T)
meta.metabolite.c<-read.csv(file="/Users/Jhansi1/Downloads/metabolite_metadata_cecal.txt", sep ="\t", header=T)
meta.mouse.c<-read.csv(file="/Users/Jhansi1/Downloads/metadata_mice_cecal.txt", sep ="\t", header=T)
#Curate files
cecal.data$BIOCHEMICAL<-make.names(cecal.data$BIOCHEMICAL)
rownames(cecal.data)<-cecal.data$BIOCHEMICAL
cecal.data$BIOCHEMICAL<-NULL
meta.mouse.c$SAMPLE.MATRIX<-NULL
meta.mouse.c$TIME.POINT<-NULL
meta.mouse.c$SAMPLENUMBER<-NULL
meta.mouse.c$SUBJECT.OR.ANIMAL.ID<-gsub("-", ".", meta.mouse.c$SUBJECT.OR.ANIMAL.ID)
meta.metabolite.c$BIOCHEMICAL<-make.names(meta.metabolite.c$BIOCHEMICAL)
#Scale all the data
#maxs <- apply(cecal.data, 2, max)
#mins <- apply(cecal.data, 2, min)
#data.scaled<-scale(cecal.data, center = mins, scale = maxs - mins)
# Run clustering
data.matrix <- as.matrix(log2(cecal.data))
data.dendro <- as.dendrogram(hclust(d = dist(x = cecal.data)))
#Heatmap
# Heatmap
# Data wrangling
data.long <- melt(data.matrix)
meta.mouse.c$Var2<-meta.mouse.c$SUBJECT.OR.ANIMAL.ID
meta.mouse.c$SUBJECT.OR.ANIMAL.ID<-NULL
meta.metabolite.c$Var1<-meta.metabolite.c$BIOCHEMICAL
meta.metabolite.c$BIOCHEMICAL<-NULL
test<-merge(data.long, meta.mouse.c, by="Var2")
test.1<-merge(test, meta.metabolite.c)
#test.1<-test.1[test.1$TREATMENT!='Western_diet_ControlBedding', ]
test.2<-test.1[test.1$SUB.PATHWAY=="Neurotransmitter", ]
x<-test.1[test.1$Var1=="imidazole.propionate", ]
3
test.2<-test.1[test.1$Var1=="ursodeoxycholate", ]
test.2$value<-2^test.2$value
heatmap.plot <- ggplot(data = test.2, aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = value)) +
scale_fill_gradient2() +
theme(axis.text.y = element_text(size = 6))
heatmap.plot
x.p<-test.p.1[test.p.1$Var1=="imidazole.propionate", ]
test.p.1<-merge(test.p, meta.metabolite.p)
# Run clustering
data.matrix.p <- as.matrix(log2(plasma.data))
#read in files
plasma.data<-read.csv(file="/Users/Jhansi1/Downloads/UNVA-0201-17MD CDT (PLASMA) VolNormImpData.txt", sep ="\t", header=T)
meta.metabolite.p<-read.csv(file="/Users/Jhansi1/Downloads/metabolite_metadata_plasma.txt", sep ="\t", header=T)
meta.mouse.p<-read.csv(file="/Users/Jhansi1/Downloads/metadata_mice_plasma.txt", sep ="\t", header=T)
#Curate files
plasma.data$BIOCHEMICAL<-make.names(plasma.data$BIOCHEMICAL)
rownames(plasma.data)<-plasma.data$BIOCHEMICAL
plasma.data$BIOCHEMICAL<-NULL
meta.mouse.p$SAMPLE.MATRIX<-NULL
meta.mouse.p$TIME.POINT<-NULL
meta.mouse.p$SAMPLENUMBER<-NULL
meta.mouse.p$SUBJECT.OR.ANIMAL.ID<-gsub("-", ".", meta.mouse.p$SUBJECT.OR.ANIMAL.ID)
meta.metabolite.p$BIOCHEMICAL<-make.names(meta.metabolite.p$BIOCHEMICAL)
# Run clustering
data.matrix.p <- as.matrix(log2(plasma.data))
data.dendro.p <- as.dendrogram(hclust(d = dist(x = data.matrix.p)))
# Create dendro
dendro.plot.p <- ggdendrogram(data = data.dendro.p, rotate = TRUE)
#Heatmap
# Heatmap
# Data wrangling
data.long.p <- melt(plasma.data)
#Heatmap
# Heatmap
# Data wrangling
data.long.p <- melt(data.matrix.p)
meta.mouse.p$Var2<-meta.mouse.p$SUBJECT.OR.ANIMAL.ID
meta.mouse.p$SUBJECT.OR.ANIMAL.ID<-NULL
meta.metabolite.p$Var1<-meta.metabolite.p$BIOCHEMICAL
meta.metabolite.p$BIOCHEMICAL<-NULL
test.p<-merge(data.long.p, meta.mouse.p, by="Var2")
test.p.1<-merge(test.p, meta.metabolite.p)
test.p.2<-test.p.1[test.p.1$SUB.PATHWAY=="Secondary Bile Acid Metabolism", ]
x.p<-test.p.1[test.p.1$Var1=="imidazole.propionate", ]
ggplot(data = x.p, aes(x = TREATMENT, y = value)) +
geom_boxplot()
y.p<-test.p.1[test.p.1$Var1=="glucose", ]
ggplot(data = y.p, aes(x = TREATMENT, y = value)) +
geom_boxplot()
#Supplemental figures
library(ggplot2)
library(ggpubr)
######Supplemental figure 5: Ex vivo veg. growth
#Ex vivo assays
library(ggplot2)
library(ggpubr)
library(reshape2)
veg<-read.delim(file = "/Users/Jhansi1/Desktop/Intraspecific_Competition/data/Ex_vivo_vegetative_growth.txt", header = T)
fillincfulod<-100/sqrt(2)
veg<-read.delim(file = "/Users/Jhansi1/Desktop/Intraspecific_Competition/data/Ex_vivo_vegetative_growth.txt", header = T)
setwd("~/Desktop")
setwd("~/Desktop/Intraspecific_Competition/code")
veg<-read.delim(file = "/Users/Jhansi1/Desktop/Intraspecific_Competition/data/Ex_vivo_vegetative_growth.txt", header = T)
setwd("~/Desktop/Intraspecific_Competition")
setwd("~/Desktop/Intraspecific_Competition/data")
veg<-read.delim(file = "/Users/Jhansi1/Desktop/Intraspecific_Competition/data/Ex_vivo_vegetative_growth.txt", header = T)
fillincfulod<-100/sqrt(2)
veg$CFU_mL[veg$CFU_mL=="0"] =fillincfulod
##growth in fresh media
veg<-read.delim(file = "/Users/Jhansi1/Desktop/Intraspecific_Competition/data/Ex_vivo_vegetative_growth.txt", header = T)
fillincfulod<-100/sqrt(2)
veg$CFU_mL[veg$CFU_mL=="0"] =fillincfulod
veg_part1<-veg[veg$Experiment_Part=="1", ]
col<-c("630"= "#FD6467","Mock"="#5B1A18","VPI" ="grey")
part1<-ggplot(veg_part1, aes(x= factor(Time), y=CFU_mL , color= factor(Strain_Growing)))+
geom_point(size=4.5, position= position_jitterdodge(jitter.width = 1, jitter.height = 0, dodge.width = 0.95)) +
scale_color_manual(values = col)+
#geom_boxplot() +
stat_summary(fun.y = median, fun.ymin = median, fun.ymax = median, geom = "crossbar", width = 0.3, color="black", position=position_dodge(0.5))+
scale_y_log10(breaks = scales::trans_breaks("log10", function(x) 10^x), labels = scales::trans_format("log10", scales::math_format(10^.x)), limits=c(50, 5E8)) +
geom_hline(aes(yintercept=100), colour = "gray10", linetype=2,  size=0.9) +
facet_grid(.~Strain_Growing)
a = part1 +
theme(
panel.background = element_rect(fill = "white", color = "grey80", size = 2)
,panel.grid.major = element_line(color = "gray90", size = 0.6)
,panel.grid.major.x = element_blank()
,panel.grid.minor = element_blank()
,axis.ticks= element_line(size = 0.6, colour = "grey90")
,axis.ticks.length = unit(0.2, "cm")
,legend.title=element_blank()
,legend.background = element_blank ()
,legend.key = element_blank ()
,legend.position="blank"
,legend.spacing = unit(.01, "mm")
,legend.text=element_text(size=12)
,axis.text.y=element_text(size=12)
,axis.title.y=element_text(size=12)
#,axis.title.x=element_blank()
,axis.text.x=element_text(size=11) )
a1<- a + ylab("CFU per mL") + xlab("Time (hr.)")
a1
#Stats
t0630<-veg_part1[veg_part1$Strain_Growing=="630" & veg_part1$Time =="0", 8]
t24630<-veg_part1[veg_part1$Strain_Growing=="630" & veg_part1$Time =="24", 8]
wilcox.test(t0630,t24630)
#data:  t0630 and t24630
#W = 0, p-value = 0.0001766
t0vpi<-veg_part1[veg_part1$Strain_Growing=="VPI" & veg_part1$Time =="0", 8]
t24vpi<-veg_part1[veg_part1$Strain_Growing=="VPI" & veg_part1$Time =="24", 8]
wilcox.test(t0vpi,t24vpi)
# Growth of VPI in media made from infected mice (Supplemental figure )
CM_630<-veg[veg$Media_Type!="D0_CM",]
